import{_ as n,o as s,c as a,e}from"./app.44e72aae.js";const t={},p=e(`<h1 id="\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u5E8F" aria-hidden="true">#</a> \u5E8F</h1><p>\u5728B\u7AD9\u770B\u89C6\u9891\u5B66\u4E60<strong>vue3.0</strong>\u65F6\uFF0C\u6709\u4E00\u8282\u4E3B\u8981\u662F\u4F7F\u7528typescript\u6765\u914D\u7F6E\u4E00\u4E9Bvuex\u7684\u5185\u5BB9</p><p>\u6211\u770B\u5B8C\u4E00\u904D\u540E\uFF0C\u8FD8\u662F\u6709\u633A\u591A\u56F0\u96BE\u70B9\u7684\uFF0C\u9996\u5148\u8981\u53BB\u4E86\u89E3\u4E00\u4E0B<code>typescript</code>\u4E2D\u7684<code>infer</code>\u3001<code>keyof</code>\u7B49\u8FD9\u4E9B\u9AD8\u7EA7\u7528\u6CD5\uFF0C \u6240\u4EE5\u672C\u6587\u4E3B\u8981\u662F\u5B66\u4E60typescript\u7684\u8BB0\u5F55\u4E86\u3002</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ce3b73aa946d402081e18bb81b003028~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></p><h2 id="infer" tabindex="-1"><a class="header-anchor" href="#infer" aria-hidden="true">#</a> infer</h2><p><code>infer</code>\u662F<code>typescript</code>\u4E2D\u7684\u5173\u952E\u5B57\uFF0C\u53EF\u4EE5\u5728<code>extends</code>\u6761\u4EF6\u8BED\u53E5\u4E2D\u63A8\u65AD\u5F85\u63A8\u65AD\u7684\u7C7B\u578B\uFF0C\u5C31\u662F<strong>\u4ECE\u7C7B\u578B\u4E2D\u83B7\u5F97\u7C7B\u578B</strong></p><p>\uFF08\u8FD9\u91CC\u7684extends\u4E0D\u662F\u7C7B\u3001\u63A5\u53E3\u7684\u7EE7\u627F\uFF0C\u800C\u662F\u5BF9\u4E8E\u7C7B\u578B\u7684\u5224\u65AD\u548C\u7EA6\u675F\uFF0C\u610F\u601D\u662F\u5224\u65ADT\u80FD\u5426\u517C\u5BB9\uFF09</p><h4 id="extends\u7684\u793A\u4F8B" tabindex="-1"><a class="header-anchor" href="#extends\u7684\u793A\u4F8B" aria-hidden="true">#</a> extends\u7684\u793A\u4F8B</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>type ParamType<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">K</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name">K</span> <span class="token operator">?</span> <span class="token constant">T</span> <span class="token operator">:</span> never<span class="token punctuation">;</span>

<span class="token keyword">interface</span> <span class="token class-name">Animal</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">animal</span><span class="token operator">:</span> string
<span class="token punctuation">}</span>
<span class="token keyword">interface</span> <span class="token class-name">Cat</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">cat</span><span class="token operator">:</span> string
<span class="token punctuation">}</span>
<span class="token comment">// ParamType\u7684T\u9700\u8981\u517C\u5BB9K\uFF0C\u5426\u5219\u4F1A\u51FA\u9519</span>
<span class="token keyword">let</span> <span class="token literal-property property">c1</span><span class="token operator">:</span> ParamType<span class="token operator">&lt;</span>Animal <span class="token operator">|</span> Cat<span class="token punctuation">,</span> Cat<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">cat</span><span class="token operator">:</span> <span class="token string">&#39;\u732B&#39;</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="infer\u4F7F\u7528" tabindex="-1"><a class="header-anchor" href="#infer\u4F7F\u7528" aria-hidden="true">#</a> infer\u4F7F\u7528</h2><p>\u4F7F\u7528\u65B9\u5F0F\uFF1A</p><ol><li>infer\u53EA\u80FD\u5728extends\u5173\u952E\u5B57\u7684\u53F3\u4FA7</li><li>infer x\u53EF\u4EE5\u7406\u89E3\u6210\u4E00\u4E2A\u672A\u77E5\u6570x\uFF0C\u8868\u793A\u5F85\u63A8\u65AD\u7684\u51FD\u6570\u53C2\u6570</li></ol><p>\u793A\u4F8B1\uFF1A \u83B7\u53D6\u4F20\u5165\u7684\u53C2\u6570\u7C7B\u578B\u4E2D\u7684<code>action</code>\uFF0C\u5982\u679C\u4F20\u5165\u7684T\u4E2D\u6CA1\u6709action\uFF0C\u5219\u4F1A\u8FD4\u56DEnever</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>type ParamType<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token punctuation">{</span> <span class="token literal-property property">action</span><span class="token operator">:</span> infer <span class="token constant">X</span> <span class="token punctuation">}</span> <span class="token operator">?</span> <span class="token constant">X</span> <span class="token operator">:</span> never<span class="token punctuation">;</span>

<span class="token keyword">interface</span> <span class="token class-name">Animal</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">animal</span><span class="token operator">:</span> string<span class="token punctuation">,</span>
    <span class="token literal-property property">action</span><span class="token operator">:</span> <span class="token keyword">void</span>
<span class="token punctuation">}</span>
<span class="token keyword">interface</span> <span class="token class-name">Cat</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">cat</span><span class="token operator">:</span> string<span class="token punctuation">,</span>
    <span class="token function-variable function">action</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token keyword">void</span>
<span class="token punctuation">}</span>
<span class="token comment">// c1\u7684\u7C7B\u578Bvoid | ()=&gt;void</span>
<span class="token keyword">let</span> <span class="token literal-property property">c1</span><span class="token operator">:</span> ParamType<span class="token operator">&lt;</span>Animal <span class="token operator">|</span> Cat<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u6253\u6EDA&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">c1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// \u6253\u6EDA</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><p>\u793A\u4F8B2\uFF1A \u89E3\u5305\uFF0C\u83B7\u53D6\u5728\u6570\u7EC4\u4E2D\u7684\u5143\u7D20\u7C7B\u578B</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>type ParamType<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token punctuation">(</span>infer <span class="token constant">X</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">?</span> <span class="token constant">X</span> <span class="token operator">:</span> never<span class="token punctuation">;</span>
<span class="token comment">// c1\u7C7B\u578B\u4E3Anumber | string</span>
<span class="token keyword">let</span> <span class="token literal-property property">c1</span><span class="token operator">:</span> ParamType<span class="token operator">&lt;</span>number<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">|</span> string<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token number">10</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><p>\u793A\u4F8B3\uFF1A \u5143\u7EC4tuple\u8F6C\u8054\u5408union</p><p>\u5176\u5B9E\u5B9E\u73B0\u7684\u65B9\u5F0F\u548C\u4E0A\u9762\u662F\u4E00\u6837\u7684</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>type ParamType<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token punctuation">(</span>infer <span class="token constant">X</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">?</span> <span class="token constant">X</span> <span class="token operator">:</span> never<span class="token punctuation">;</span>
<span class="token comment">// c1\u7C7B\u578B\u4E3Anumber | string</span>
<span class="token keyword">let</span> <span class="token literal-property property">c1</span><span class="token operator">:</span> ParamType<span class="token operator">&lt;</span><span class="token punctuation">[</span>string<span class="token punctuation">,</span> number<span class="token punctuation">]</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token number">10</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><p>\u793A\u4F8B4\uFF1A <strong>\u8054\u5408union\u8F6C\u5143\u7EC4tuple</strong></p><p>\u8FD9\u91CC\u5C06 <code>number | string</code> \u8F6C\u6362\u6210 <code>number &amp; string</code>\u7684\u8FC7\u7A0B\u5C31\u6BD4\u8F83\u590D\u6742\u4E86</p><p>\u5728\u8FD9\u91CC\u6211\u4E5F\u5728\u7F51\u4E0A\u53C2\u8003\u4E86\u5F88\u591A\u6587\u7AE0\uFF0C\u624D\u9010\u6B65\u7406\u89E3\u7684</p><p>\u53C2\u8003\u6587\u7AE0\uFF1A</p><ul><li>https://blog.csdn.net/qq_33221861/article/details/112369522</li><li>https://juejin.cn/post/6844903796997357582</li><li>https://blog.csdn.net/weixin_44051815/article/details/124708072</li><li>https://blog.csdn.net/qq_39920234/article/details/121500009</li><li>https://www.e-learn.cn/topic/3752913</li><li>https://zhuanlan.zhihu.com/p/526988538</li><li>https://www.bookstack.cn/read/TypeScriptDeepDiveZH/59.md</li></ul><p>\u5982\u679C\u662F\u60F3\u7684\u6CA1\u90A3\u4E48\u591A\uFF0C\u90A3\u4E48\u53EF\u80FD\u4F1A\u50CF\u4E0B\u9762\u8FD9\u6837\u5199\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>type Change<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name">infer</span> <span class="token constant">X</span> <span class="token operator">|</span> infer <span class="token constant">Y</span> <span class="token operator">?</span> <span class="token punctuation">[</span> <span class="token constant">X</span><span class="token punctuation">,</span> <span class="token constant">Y</span> <span class="token punctuation">]</span> <span class="token operator">:</span> never
type Res <span class="token operator">=</span> Change<span class="token operator">&lt;</span>number <span class="token operator">|</span> string<span class="token operator">&gt;</span>  <span class="token comment">// [string, string] | [number, number]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u662F\u56E0\u4E3A\u8054\u5408\u7C7B\u578B\u4F1A\u5206\u522B\u8FDB\u884C\u6BD4\u8F83\u3002</p><p>\u9996\u5148\u5BF9\u4E8E<code>extends</code>\u5DE6\u8FB9\u5982\u679C\u662F\u8054\u5408\u7C7B\u578Bunion, \u90A3\u4E48\u8F6C\u6362\u7684\u8FC7\u7A0B\u5230\u5E95\u5E94\u8BE5\u662F\u600E\u4E48\u6837\u7684\uFF1A</p><h3 id="typescript-\u534F\u53D8\u548C\u9006\u53D8" tabindex="-1"><a class="header-anchor" href="#typescript-\u534F\u53D8\u548C\u9006\u53D8" aria-hidden="true">#</a> typescript \u534F\u53D8\u548C\u9006\u53D8</h3><p>\u8FD9\u91CC\u9996\u5148\u8981\u4E86\u89E3\u4E00\u4E0B<code>typescript</code>\u7684\u534F\u53D8\u548C\u9006\u53D8\u8FD9\u4E24\u4E2A\u6982\u5FF5</p><p>\u534F\u53D8\uFF08Covariance\uFF09\uFF1A \u5B50\u7C7B\u578B\u53EF\u4EE5\u8D4B\u503C\u7ED9\u7236\u7C7B\u578B \u9006\u53D8\uFF08Contravariance\uFF09\uFF1A\u7236\u7C7B\u578B\u53EF\u4EE5\u8D4B\u503C\u7ED9\u5B50\u7C7B\u578B</p><p>\u4F8B\u5B50\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">interface</span> <span class="token class-name">parent</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">a</span><span class="token operator">:</span> number<span class="token punctuation">,</span>
<span class="token punctuation">}</span>
<span class="token keyword">interface</span> <span class="token class-name">child</span> <span class="token keyword">extends</span> <span class="token class-name">parent</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">b</span><span class="token operator">:</span> number
<span class="token punctuation">}</span>
<span class="token keyword">let</span> <span class="token literal-property property">p1</span><span class="token operator">:</span> parent <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> <span class="token literal-property property">p2</span><span class="token operator">:</span> child <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">7</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u534F\u53D8\uFF0C\u53EF\u4EE5\u5C06\u5B50\u7C7B\u578B\u8D4B\u7ED9\u7236\u7C7B\u578B\uFF0C\u4F46\u4E0D\u80FD\u5C06\u7236\u7C7B\u578B\u8D4B\u7ED9\u5B50\u7C7B\u578B</span>
p1 <span class="token operator">=</span> p2<span class="token punctuation">;</span>  
<span class="token comment">// p2 = p1; \u62A5\u9519</span>
<span class="token comment">// \u9006\u53D8\uFF0C\u5C06\u8FD9\u4E2A\u7279\u6027\u653E\u5230\u51FD\u6570\u7C7B\u578B\u5F53\u4E2D</span>
type <span class="token function-variable function">fun1</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">a</span><span class="token operator">:</span> parent</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span> <span class="token keyword">void</span>
type <span class="token function-variable function">fun2</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">a</span><span class="token operator">:</span> child</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>
type test <span class="token operator">=</span> fun2 <span class="token keyword">extends</span> <span class="token class-name">fun1</span> <span class="token operator">?</span> <span class="token boolean">true</span> <span class="token operator">:</span> <span class="token boolean">false</span>

<span class="token keyword">let</span> <span class="token literal-property property">f1</span><span class="token operator">:</span> <span class="token function-variable function">fun1</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">a</span><span class="token operator">:</span> parent</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">let</span> <span class="token literal-property property">f2</span><span class="token operator">:</span> <span class="token function-variable function">fun2</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">a</span><span class="token operator">:</span> child</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token comment">// f1 = f2 \u62A5\u9519</span>
f2 <span class="token operator">=</span> f1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u9006\u53D8\u662F\u9700\u8981\u5728\u51FD\u6570\u4E2D\u4F7F\u7528\u7684\uFF0C\u9664\u4E86\u51FD\u6570\u53C2\u6570\u7C7B\u578B\u662F\u9006\u53D8\uFF0C\u5176\u4ED6\u90FD\u662F\u534F\u53D8\u3002\u800C\u5728\u4E0A\u9762\u8054\u5408\u7C7B\u578B\u8F6C\u5143\u7EC4\u7C7B\u578B\u4E2D\uFF0C\u6709\u4E00\u70B9\u975E\u5E38\u91CD\u8981\uFF0C\u90A3\u5C31\u662F<strong>\u5728\u9006\u53D8\u4F4D\u7F6E\u7684\u540C\u4E00\u7C7B\u578B\u53D8\u91CF\u4E2D\u7684\u591A\u4E2A\u5019\u9009\u4F1A\u88AB\u63A8\u65AD\u6210\u4EA4\u53C9\u7C7B\u578B</strong>\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// UnionToTuple = (() =&gt; number) &amp; (() =&gt; string)</span>
type UnionToTuple <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token function-variable function">x</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span>number<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> any<span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token function-variable function">x</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span>string<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> any<span class="token punctuation">)</span> <span class="token keyword">extends</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">x</span><span class="token operator">:</span> infer <span class="token constant">P</span></span><span class="token punctuation">)</span>  <span class="token operator">=&gt;</span> any <span class="token operator">?</span> <span class="token constant">P</span> <span class="token operator">:</span> never
<span class="token comment">// Res = [number, string]</span>
type Res <span class="token operator">=</span> UnionToTuple <span class="token keyword">extends</span> <span class="token punctuation">{</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> infer <span class="token constant">X</span><span class="token punctuation">;</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> infer <span class="token constant">Y</span> <span class="token punctuation">}</span> <span class="token operator">?</span> <span class="token punctuation">[</span><span class="token constant">X</span><span class="token punctuation">,</span> <span class="token constant">Y</span><span class="token punctuation">]</span> <span class="token operator">:</span> never
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u901A\u8FC7\u9006\u53D8\u53EF\u4EE5\u5F97\u5230\u4EE5\u4E0A\u7684\u65B9\u5F0F\uFF0C\u8FD9\u6837\u6700\u540E\u7684<code>[number, string]</code>\u7ED3\u679C\u5C31\u5DF2\u7ECF\u5F97\u5230\u4E86\uFF0C\u90A3\u73B0\u5728\u91CD\u8981\u7684\u5C31\u662F\u5F97\u5230<code>((x: ()=&gt;number) =&gt; any) | ((x: ()=&gt;string) =&gt; any)</code></p><p>\u8FD9\u4E00\u70B9\u5C31\u6BD4\u8F83\u5BB9\u6613\u4E86\uFF0C\u4EE5\u4E0B\u65B9\u5F0F\u5C31\u53EF\u4EE5\u5C06<code>number | string</code>\u53D8\u6210 <code>((x: { a: string; }) =&gt; any) | ((x: { a: number; }) =&gt; any)</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// number | string</span>
<span class="token comment">// (x: ()=&gt; number)=&gt; any | (x: ()=&gt; string)=&gt; any</span>
type Union<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name">any</span>  <span class="token operator">?</span> <span class="token punctuation">(</span><span class="token function-variable function">x</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span> any <span class="token operator">:</span> never
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u90A3\u4E48\u6700\u7EC8\u7684\u8F6C\u6362\u65B9\u5F0F\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>type UnionToTuple<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name">any</span>  <span class="token operator">?</span> <span class="token punctuation">(</span><span class="token function-variable function">x</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span> any <span class="token operator">:</span> never<span class="token punctuation">)</span> <span class="token keyword">extends</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">x</span><span class="token operator">:</span> infer <span class="token constant">P</span></span><span class="token punctuation">)</span>  <span class="token operator">=&gt;</span> any <span class="token operator">?</span> <span class="token constant">P</span> <span class="token operator">:</span> never<span class="token punctuation">)</span> <span class="token keyword">extends</span> <span class="token punctuation">{</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> infer <span class="token constant">X</span><span class="token punctuation">;</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> infer <span class="token constant">Y</span> <span class="token punctuation">}</span> <span class="token operator">?</span> <span class="token punctuation">[</span><span class="token constant">X</span><span class="token punctuation">,</span> <span class="token constant">Y</span><span class="token punctuation">]</span> <span class="token operator">:</span> never
type Res <span class="token operator">=</span> UnionToTuple<span class="token operator">&lt;</span>number <span class="token operator">|</span> string<span class="token operator">&gt;</span>  <span class="token comment">// [string, number]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>emmmm..... \u8FD9\u91CC\u7684\u8F6C\u6362\u8FC7\u7A0B\u8FD8\u662F\u7279\u522B\u590D\u6742\u7684\uFF0C\u7406\u89E3\u8D77\u6765\u4E5F\u6BD4\u8F83\u9EBB\u70E6\uFF0C\u8FD9\u91CC\u6700\u91CD\u8981\u7684\u8FD8\u662F<strong>\u5728\u9006\u53D8\u4F4D\u7F6E\u7684\u540C\u4E00\u7C7B\u578B\u53D8\u91CF\u4E2D\u7684\u591A\u4E2A\u5019\u9009\u4F1A\u88AB\u63A8\u65AD\u6210\u4EA4\u53C9\u7C7B\u578B</strong>\uFF0C\u8FD9\u4E2A\u6982\u5FF5\u5982\u679C\u4E0D\u77E5\u9053\uFF0C\u771F\u7684\u5F88\u96BE\u63A8\u5BFC\u51FA\u6765</p><hr><br><h2 id="keyof\u7D22\u5F15\u7C7B\u578B\u67E5\u8BE2\u64CD\u4F5C\u7B26" tabindex="-1"><a class="header-anchor" href="#keyof\u7D22\u5F15\u7C7B\u578B\u67E5\u8BE2\u64CD\u4F5C\u7B26" aria-hidden="true">#</a> keyof\u7D22\u5F15\u7C7B\u578B\u67E5\u8BE2\u64CD\u4F5C\u7B26</h2><p>\u5728\u4E0A\u9762\u5927\u81F4\u4E86\u89E3\u4E86<strong>infer</strong>\u540E\uFF0C\u7EE7\u7EED\u4E86\u89E3\u6CDB\u578B\u9AD8\u7EA7\u7C7B\u578B\u4E2D\u7684<code>keyof</code>\uFF0C\u8FD9\u4E2A\u5176\u5B9E\u6709\u70B9\u7C7B\u4F3C\u4E8E<code>es6</code>\u4E2D\u7684<code>keys()</code>\u65B9\u6CD5\uFF0C\u7528\u4E8E\u83B7\u53D6\u952E\u503C\u7684\u904D\u5386\u5668</p><p><code>keyof</code>\u53EF\u4EE5\u83B7\u53D6\u67D0\u79CD\u7C7B\u578B\u7684\u6240\u6709\u952E\uFF0C\u8FD4\u56DE\u8054\u5408\u7C7B\u578Bunion</p><p>\u57FA\u672C\u4F7F\u7528\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">interface</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> string
    <span class="token literal-property property">age</span><span class="token operator">:</span> number
    <span class="token function-variable function">action</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span> <span class="token keyword">void</span>
<span class="token punctuation">}</span>

type usertype <span class="token operator">=</span> keyof User<span class="token punctuation">;</span>  <span class="token comment">// name | age | action</span>
<span class="token keyword">let</span> <span class="token literal-property property">t1</span><span class="token operator">:</span> usertype <span class="token operator">=</span> <span class="token string">&quot;action&quot;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5E76\u4E14\uFF0C\u5BF9\u4E8Eclass\u7C7B\u6765\u8BF4\uFF0Ckeyof\u53EA\u80FD\u8FD4\u56DE\u7C7B\u578B\u4E0A\u5DF2\u77E5\u7684<strong>\u516C\u5171\u5C5E\u6027\u540D</strong>\uFF0C\u5728\u4E0B\u9762\u7684\u4F8B\u5B50\u5F53\u4E2D\uFF0C<code>keyof</code>\u4EA7\u751F\u7684\u4E5F\u53EA\u662F<code>name | age | action</code>\u7684\u8054\u5408\u7C7B\u578B</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> string<span class="token punctuation">;</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> number<span class="token punctuation">;</span>
    <span class="token function-variable function">action</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token function-variable function">hobby</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span> string<span class="token punctuation">;</span>
    <span class="token keyword">protected</span> <span class="token literal-property property">eye</span><span class="token operator">:</span> string
<span class="token punctuation">}</span>
type usertype <span class="token operator">=</span> keyof User<span class="token punctuation">;</span>  <span class="token comment">// name | age | action</span>
<span class="token comment">// let t1: usertype = &quot;hobby&quot; // \u51FA\u9519</span>
<span class="token comment">// let t1: usertype = &quot;eye&quot; // \u51FA\u9519</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u4E00\u4E2A\u7C7B\u578B\u6709\u4E00\u4E2A<code>symbol</code>\u6216\u8005<code>number</code>\u7C7B\u578B\u7684\u7D22\u5F15\u7B7E\u540D\uFF0C<code>keyof</code>\u4F1A\u76F4\u63A5\u8FD4\u56DE\u8FD9\u4E9B\u7C7B\u578B\u3002</p><p>\u8FD9\u91CC\u7684\u7D22\u5F15\u7B7E\u540D\u5982\u679C\u662F<code>string</code>\u7C7B\u578B\uFF0C\u90A3\u4E48\u5C06\u4F1A\u8FD4\u56DE<code>string | number</code>\uFF0C\u8FD9\u662F\u5728<code>Typescript 2.9</code>\u4E2D\u65B0\u589E\u7684\u5185\u5BB9\uFF0C\u53EF\u4EE5\u53C2\u8003\uFF1Ahttps://www.bookstack.cn/read/TypeScript-4.4-zh/zh-release-notes-typescript-2.9.md</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>type <span class="token constant">K1</span> <span class="token operator">=</span> keyof <span class="token punctuation">{</span> <span class="token punctuation">[</span>x<span class="token operator">:</span> symbol<span class="token punctuation">]</span><span class="token operator">:</span> User <span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token comment">// symbol</span>
type <span class="token constant">K2</span> <span class="token operator">=</span> keyof <span class="token punctuation">{</span> <span class="token punctuation">[</span>x<span class="token operator">:</span> number<span class="token punctuation">]</span><span class="token operator">:</span> User <span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token comment">// nuumber</span>
type <span class="token constant">K3</span> <span class="token operator">=</span> keyof <span class="token punctuation">{</span> <span class="token punctuation">[</span>x<span class="token operator">:</span> string<span class="token punctuation">]</span><span class="token operator">:</span> User <span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token comment">// string | number</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u901A\u5E38<code>keyof</code>\u5728\u4F7F\u7528\u65F6\u5F80\u5F80\u4F1A\u548C<code>in</code>\u6216\u8005<code>typeof</code>\u642D\u914D\u4F7F\u7528</p><hr><br><h2 id="typeof" tabindex="-1"><a class="header-anchor" href="#typeof" aria-hidden="true">#</a> typeof</h2><p><strong>typeof</strong>\u662F\u7528\u6765\u5224\u65AD\u6570\u636E\u7C7B\u578B,\u8FD4\u56DE\u6210\u5458\u7684\u7C7B\u578B \u53EF\u4EE5\u5BF9<code>\u5BF9\u8C61</code>\u3001<code>\u7C7B</code>\u3001<code>\u679A\u4E3E</code>\u3001<code>\u51FD\u6570</code>\u8FDB\u884C\u7C7B\u578B\u8FD4\u56DE</p><ul><li>\u793A\u4F8B: \u5BF9\u8C61</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// typeof \u5BF9\u8C61</span>
<span class="token keyword">let</span> <span class="token constant">A</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token string">&#39;aaa&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">1111</span>
<span class="token punctuation">}</span>
<span class="token comment">/*
type _A = {
    a: string;
    b: number;
}
*/</span>
type _A <span class="token operator">=</span> <span class="token keyword">typeof</span> <span class="token constant">A</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u793A\u4F8B\uFF1A \u7C7B</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// typeof \u7C7B</span>
<span class="token keyword">class</span> <span class="token class-name">C</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">a</span><span class="token operator">:</span> number<span class="token punctuation">;</span>
    <span class="token literal-property property">b</span><span class="token operator">:</span> string
<span class="token punctuation">}</span>

type _C <span class="token operator">=</span> <span class="token keyword">typeof</span> <span class="token constant">C</span> 
<span class="token keyword">let</span> <span class="token literal-property property">c</span><span class="token operator">:</span> _C <span class="token operator">=</span> <span class="token constant">C</span>  <span class="token comment">// emmm.... \u611F\u89C9\u597D\u50CF\u6CA1\u4EC0\u4E48\u610F\u4E49</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7136\u540E\u6211\u4E0A\u7F51\u641C\u7D22\u4E86\u4E00\u4E0B\uFF0C\u53D1\u73B0\u5982\u679C\u662F\u4E0B\u9762\u8FD9\u79CD\u60C5\u51B5\uFF0C\u662F\u9700\u8981\u4F7F\u7528<code>typeof</code>\u91CD\u65B0\u83B7\u53D6\u7C7B\u7684</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Ponit</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">x</span><span class="token operator">:</span> number<span class="token punctuation">;</span>
    <span class="token literal-property property">y</span><span class="token operator">:</span> number<span class="token punctuation">;</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">x</span><span class="token operator">:</span> number<span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">=</span> x<span class="token punctuation">;</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>y <span class="token operator">=</span> y<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token comment">// \u5DE5\u5382\u51FD\u6570</span>
<span class="token keyword">function</span> <span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">PointClass</span><span class="token operator">:</span> <span class="token keyword">typeof</span> Ponit<span class="token punctuation">,</span> <span class="token literal-property property">x</span><span class="token operator">:</span> number<span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">PointClass</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u4E0B\u9762\u5199\u6CD5\u5C06\u62A5\u9519</span>
<span class="token keyword">function</span> <span class="token function">getInstance2</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">PointClass</span><span class="token operator">:</span> Ponit<span class="token punctuation">,</span> <span class="token literal-property property">x</span><span class="token operator">:</span> number<span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">PointClass</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// \u62A5\u9519 \u6B64\u8868\u8FBE\u5F0F\u4E0D\u53EF\u6784\u9020\u3002\u7C7B\u578B &quot;Ponit&quot; \u6CA1\u6709\u6784\u9020\u7B7E\u540D\u3002</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u793A\u4F8B\uFF1A \u679A\u4E3E</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// typeof \u679A\u4E3E</span>
<span class="token comment">// \u4F7F\u7528\u679A\u4E3E\u9650\u5B9A\u65E5\u671F</span>
<span class="token keyword">enum</span> day <span class="token punctuation">{</span> Mon<span class="token punctuation">,</span> Tue<span class="token punctuation">,</span> Wed<span class="token punctuation">,</span> Thu<span class="token punctuation">,</span> Fri<span class="token punctuation">,</span> Sat<span class="token punctuation">,</span> Sun<span class="token punctuation">}</span>
type _day <span class="token operator">=</span> <span class="token keyword">typeof</span> day<span class="token punctuation">;</span>
<span class="token keyword">let</span> <span class="token literal-property property">days</span><span class="token operator">:</span> _day <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">Mon</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>
    <span class="token literal-property property">Tue</span><span class="token operator">:</span> <span class="token number">12</span><span class="token punctuation">,</span>
    <span class="token literal-property property">Wed</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> 
    <span class="token literal-property property">Thu</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> 
    <span class="token literal-property property">Fri</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> 
    <span class="token literal-property property">Sat</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> 
    <span class="token literal-property property">Sun</span><span class="token operator">:</span> <span class="token number">1</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>days<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// { Mon: 4, Tue: 12, Wed: 1, Thu: 1, Fri: 1, Sat: 1, Sun: 1 }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u793A\u4F8B\uFF1A\u51FD\u6570</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">compare</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">x</span><span class="token operator">:</span> number<span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> number</span><span class="token punctuation">)</span><span class="token operator">:</span>boolean <span class="token punctuation">{</span>
    <span class="token keyword">return</span> x <span class="token operator">&gt;</span> y<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
type _compare <span class="token operator">=</span> <span class="token keyword">typeof</span> compare<span class="token punctuation">;</span>  <span class="token comment">// (x: number, y: number) =&gt; boolean</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><br><h2 id="in\u7C7B\u578B\u6620\u5C04" tabindex="-1"><a class="header-anchor" href="#in\u7C7B\u578B\u6620\u5C04" aria-hidden="true">#</a> in\u7C7B\u578B\u6620\u5C04</h2><p>\u5BF9\u4E8E\u7C7B\u578B\uFF0C\u540C\u6837\u4E5F\u53EF\u4EE5\u8FDB\u884C\u904D\u5386\u679A\u4E3E\uFF0C\u4F7F\u7528\u7684\u65B9\u5F0F\u5C31\u662F<code>in</code>\u5173\u952E\u5B57</p><p>\u4F7F\u7528\u65B9\u5F0F\uFF1A <code>[ K in Keys ]</code> \uFF0C \u8FD9\u91CC\u7684Keys\u5FC5\u987B\u662F<code>string</code>,<code>number</code>,<code>symbol</code>\u6216\u8005\u8054\u5408\u7C7B\u578B</p><p>\u793A\u4F8B\uFF1A\u5C06<code>type A = { name: number; age: number; }</code> \u5185\u90E8\u7C7B\u578B\u5168\u90E8\u4ECE<code>number</code>\u8F6C\u53D8\u4E3A<code>string</code></p><p>\u8FD0\u8425\u4E4B\u524D\u5B66\u5230\u7684<code>keyof</code>,\u5C06\u7C7B\u578B<code>A</code>\u8F6C\u53D8\u4E3A<code>name | age</code>\uFF0C \u7136\u540E\u518D\u4F7F\u7528<code>in</code>\u904D\u5386\u6B64\u8054\u5408\u7C7B\u578B\uFF0C\u5206\u522B\u5BF9\u5C5E\u6027\u540D\u5206\u914D\u7C7B\u578B</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>type <span class="token constant">A</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> number<span class="token punctuation">;</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> number<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// type User = { name: string; age: string; }</span>
type User <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token punctuation">[</span><span class="token constant">K</span> <span class="token keyword">in</span> keyof <span class="token constant">A</span><span class="token punctuation">]</span><span class="token operator">:</span> string
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5185\u7F6E\u5DE5\u5177\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u5185\u7F6E\u5DE5\u5177\u7C7B\u578B" aria-hidden="true">#</a> \u5185\u7F6E\u5DE5\u5177\u7C7B\u578B</h2><p>\u63A5\u4E0B\u6765\u4E3A\u4E86\u4F7F\u7528\u66F4\u52A0\u65B9\u4FBF\uFF0C\u53EF\u4EE5\u5BF9<code>typescript</code>\u4E2D\u5185\u7F6E\u7684\u5DE5\u5177\u7C7B\u578B\u8FDB\u884C\u4E00\u4E9B\u5B66\u4E60\u3002</p><table><thead><tr><th>\u5DE5\u5177\u7C7B\u578B\u540D\u79F0</th><th>\u63CF\u8FF0</th><th>\u7528\u6CD5</th></tr></thead><tbody><tr><td>Readonly&lt;T&gt;</td><td>\u5C06 T \u4E2D\u6240\u6709\u5C5E\u6027\u90FD\u53D8\u4E3A\u53EA\u8BFB</td><td><code>Readonly&lt;{ a: number }&gt;</code> &lt;===&gt; <code>{ readonly a: number }</code></td></tr><tr><td>ReadonlyArray&lt;T&gt;</td><td>\u8FD4\u56DE\u4E00\u4E2A T \u7C7B\u578B\u7684\u53EA\u8BFB\u6570\u7EC4</td><td><code>ReadonlyArray&lt;string&gt;</code> &lt;===&gt; <code>readonly string[]</code></td></tr><tr><td>Partial&lt;T&gt;</td><td>\u5C06 T \u4E2D\u6240\u6709\u7684\u5C5E\u6027\u90FD\u53D8\u6210\u53EF\u9009\u7C7B\u578B</td><td><code>Partial&lt;{ a: number }&gt;</code> &lt;===&gt; <code>{ a?: number }</code></td></tr><tr><td>Required&lt;T&gt;</td><td>\u5C06 T \u4E2D\u6240\u6709\u7684\u5C5E\u6027\u90FD\u53D8\u6210\u5FC5\u9009\u7C7B\u578B</td><td>\u548C\u4E0A\u9762\u7684<code>Partial</code>\u6B63\u597D\u76F8\u53CD</td></tr><tr><td>Pick&lt;T, K extends keyof T&gt;</td><td>\u4ECE T \u4E2D\u6458\u53D6\u90E8\u5206\u5C5E\u6027</td><td><code>Pick&lt;{ a: number, b: string, c: boolean }, &#39;a&#39; | &#39;c&#39;&gt;</code> &lt;===&gt; <code>{ a: number, c: boolean }</code></td></tr><tr><td>Omit&lt;T, K extends keyof T&gt;</td><td>\u4ECE T \u4E2D\u6392\u9664\u90E8\u5206\u5C5E\u6027</td><td><code>Omit&lt;{ a: number, b: string, c: boolean }, &#39;a&#39; | &#39;c&#39;&gt;</code> &lt;===&gt; <code>{ b: string }</code></td></tr><tr><td>Exclude&lt;T, U&gt;</td><td>\u4ECE T \u4E2D\u5254\u9664\u53EF\u4EE5\u8D4B\u503C\u7ED9 U \u7684\u7C7B\u578B</td><td><code>Exclude&lt;number | string | boolean, string&gt;</code> &lt;===&gt; <code>number | boolean</code></td></tr><tr><td>Extract&lt;T, U&gt;</td><td>\u63D0\u53D6 T \u4E2D\u53EF\u4EE5\u8D4B\u503C\u7ED9 U \u7684\u7C7B\u578B</td><td><code>Exclude&lt;number | string | boolean, string&gt;</code> &lt;===&gt; <code>string</code></td></tr><tr><td>Record&lt;K, T&gt;</td><td>\u8FD4\u56DE\u5C5E\u6027\u540D\u4E3A K\uFF0C\u5C5E\u6027\u503C\u4E3A T \u7684\u7C7B\u578B</td><td><code>Record&lt;&#39;a&#39; | &#39;b&#39;, () =&gt; void&gt;</code> &lt;===&gt; <code>{ a: ()=&gt;void, b: ()=&gt;void }</code></td></tr><tr><td>NonNullable&lt;T&gt;</td><td>\u4ECE T \u4E2D\u5254\u9664 null \u548C undefined</td><td><code>NonNullable&lt;string | null | undefined&gt;</code> &lt;===&gt; <code>string</code></td></tr><tr><td>ConstructorParameters&lt;T&gt;</td><td>\u83B7\u53D6 T \u7684<strong>\u6784\u9020\u51FD\u6570</strong>\u53C2\u6570\u7C7B\u578B\u7EC4\u6210\u7684\u5143\u7EC4</td><td>Compare\u662F\u7C7B\uFF0C\u6784\u9020\u51FD\u6570<code>constructor(a: number, b:number){ ... }</code>\u3002 <code>ConstructorParameters&lt;typeof Compare&gt;</code> &lt;===&gt; <code>[ a: number, b: number]</code></td></tr><tr><td>InstanceType&lt;T&gt;</td><td>\u7531\u6784\u9020\u51FD\u6570\u7C7B\u578BT\u7684\u5B9E\u4F8B\u7C7B\u578B\u6765\u6784\u5EFA\u4E00\u4E2A\u65B0\u7C7B\u578B</td><td><code>InstanceType&lt;typeof Compare&gt;</code> &lt;===&gt; <code>Compare</code></td></tr><tr><td>Parameters&lt;T&gt;</td><td>\u83B7\u53D6\u51FD\u6570\u53C2\u6570\u7C7B\u578B\u7EC4\u6210\u7684\u5143\u7EC4</td><td><code>Parameters&lt;(a: number, b: string) =&gt; number&gt;</code> &lt;===&gt; <code>[ a: number, b: number]</code></td></tr><tr><td>ReturnType&lt;T&gt;</td><td>\u83B7\u53D6\u51FD\u6570\u8FD4\u56DE\u503C\u7C7B\u578B</td><td><code>ReturnType&lt;(a: number, b: string) =&gt; number&gt;</code> &lt;===&gt; <code>number</code></td></tr></tbody></table><br><br><p>\u4E0A\u9762\u8FD9\u4E9B\u5185\u7F6E\u7684\u5DE5\u5177\u7C7B\u578B\u80FD\u591F\u5F88\u5927\u7A0B\u5EA6\u4E0A\u7B80\u5316\u4EE3\u7801\u3002</p><h3 id="\u5B9E\u4F8B" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u4F8B" aria-hidden="true">#</a> \u5B9E\u4F8B</h3><ol><li>\u6BD4\u5982\u8BF4\u7ED9\u5B9A\u4E00\u4E2A<code>interface</code>\u63A5\u53E3\uFF0C\u9700\u8981\u5C06\u5185\u90E8\u6240\u6709\u5C5E\u6027\u90FD\u53D8\u6210\u53EF\u9009\u7C7B\u578B</li></ol><p>\u867D\u7136\u6211\u4EEC\u81EA\u5DF1\u4E5F\u53EF\u4EE5\u5199\uFF0C\u4F46\u662F\u5982\u679C\u76F4\u63A5\u4F7F\u7528\u73B0\u6709\u7684\u5185\u7F6E\u5DE5\u5177\u7C7B\u578B<code>Partial</code>\u4E0D\u662F\u66F4\u597D\u4E48</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name"><span class="token constant">A</span></span> <span class="token punctuation">{</span>
    name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>
    age<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span>
    <span class="token function-variable function">action</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token keyword">void</span>
<span class="token punctuation">}</span>
<span class="token keyword">type</span> <span class="token class-name">PartialFun<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token punctuation">[</span><span class="token constant">K</span> <span class="token keyword">in</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token punctuation">]</span> <span class="token operator">?</span> <span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token constant">K</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
<span class="token keyword">type</span> <span class="token class-name">_A</span> <span class="token operator">=</span> PartialFun<span class="token operator">&lt;</span><span class="token constant">A</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6216\u8005\u8BF4\u6211\u5728\u7F51\u4E0A\u770B\u5230\u7684\u4E00\u9053\u8F6C\u6362\u9898\u76EE\uFF1A</p><ul><li>\u5982\u4F55\u5B9A\u4E49\u4E00\u4E2A<code>SetOptional</code>\u5DE5\u5177\u7C7B\u578B\uFF0C\u652F\u6301\u628A\u7ED9\u5B9A\u7684<code>keys</code>\u5BF9\u5E94\u7684\u5C5E\u6027\u53D8\u6210\u53EF\u9009\u7684\uFF1F</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Foo</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
	a<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
	b<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
	c<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u6D4B\u8BD5\u7528\u4F8B</span>
<span class="token keyword">type</span> <span class="token class-name">SomeOptional</span> <span class="token operator">=</span> SetOptional<span class="token operator">&lt;</span>Foo<span class="token punctuation">,</span> <span class="token string">&#39;a&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;b&#39;</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u6837\u5728\u4FEE\u6539\u65F6\u601D\u8003\u65B9\u5F0F\uFF0C\u9700\u8981\u5BF9<code>Foo</code>\u4E0E<code>a | b</code>\u5339\u914D\u7684\u5C5E\u6027\u62C6\u9664\u6765\u53D8\u6210\u53EF\u9009\uFF0C\u7136\u540E\u4E0D\u5339\u914D\u7684\u5C5E\u6027\u7EF4\u6301\u4E0D\u53D8\uFF0C\u6700\u540E\u5C06\u53EF\u9009\u548C\u4E0D\u53EF\u9009\u901A\u8FC7<code>&amp;</code> \u8FDB\u884C\u8054\u5408</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// \u5BF9\u5E94\u7684\u5C5E\u6027\u53D8\u6210\u53EF\u9009</span>
<span class="token keyword">type</span> <span class="token class-name">CommonFun<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">K</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token punctuation">[</span> t <span class="token keyword">in</span> <span class="token keyword">keyof</span> <span class="token constant">T</span> <span class="token keyword">as</span> t <span class="token keyword">extends</span> <span class="token class-name"><span class="token constant">K</span></span> <span class="token operator">?</span> t<span class="token operator">:</span> <span class="token builtin">never</span><span class="token punctuation">]</span> <span class="token operator">?</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span>t<span class="token punctuation">]</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u4E0D\u5BF9\u5E94\u7684\u5C5E\u6027</span>
<span class="token keyword">type</span> <span class="token class-name">Unequal<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">K</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token punctuation">[</span> t <span class="token keyword">in</span> <span class="token keyword">keyof</span> <span class="token constant">T</span> <span class="token keyword">as</span> t <span class="token keyword">extends</span> <span class="token class-name"><span class="token constant">K</span></span> <span class="token operator">?</span> <span class="token builtin">never</span><span class="token operator">:</span> t<span class="token punctuation">]</span> <span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span>t<span class="token punctuation">]</span>
<span class="token punctuation">}</span>
<span class="token keyword">type</span> <span class="token class-name">SetOptional<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">K</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> CommonFun<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">K</span><span class="token operator">&gt;</span> <span class="token operator">&amp;</span> Unequal<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">K</span><span class="token operator">&gt;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0D\u8FC7\u8FD9\u6837\u867D\u7136\u601D\u8DEF\u5F88\u6E05\u6670\uFF0C\u4F46\u662F\u770B\u8D77\u6765\u5199\u4E86\u597D\u591A\u3002\u4E8B\u5B9E\u4E0A\uFF0C\u53EF\u4EE5\u4F7F\u7528<code>Partial</code>\u548C<code>Pick</code>\u6765\u4EE3\u66FF<code>CommonFun</code>, \u7136\u540E\u7528<code>Omit</code>\u4EE3\u66FF<code>Unequal</code></p><p>\u53EA\u9700\u8981\u50CF\u4E0B\u9762\u7684\u4E00\u53E5\u5C31\u53EF\u4EE5\u89E3\u51B3\uFF0C\u662F\u4E0D\u662F\u7F29\u51CF\u4E86\u5F88\u591A\u4EE3\u7801</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">SetOptional<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">K</span> <span class="token keyword">extends</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> Partial<span class="token operator">&lt;</span>Pick<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">K</span><span class="token operator">&gt;&gt;</span> <span class="token operator">&amp;</span> Omit<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">K</span><span class="token operator">&gt;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><hr><p>\u5F53\u7136\u8FD9\u4E9B\u90FD\u662F\u8981\u57FA\u4E8E\u5BF9<code>typescript</code>\u5185\u7F6E\u7C7B\u578B\u6BD4\u8F83\u719F\u6089\u7684\u60C5\u51B5\u4E0B\uFF0C\u6700\u597D\u7684\u65B9\u5F0F\u5C31\u662F\u591A\u591A\u53BB\u4F7F\u7528\u3002\u5C31\u50CF\u5F53\u521D\u6700\u5F00\u59CB\u5B66\u4E60<code>javascript</code>\u65F6\uFF0C\u5BF9\u4E8E<code>Math.floor</code>\u3001<code>splice</code>\u8FD9\u4E9B\u65B9\u6CD5\u4E5F\u662F\u591A\u4F7F\u7528\u624D\u80FD\u591F\u719F\u6089\u8D77\u6765\u3002</p><p>\u5F53\u7136\u4E0A\u9762\u7684\u8FD9\u4E9B\u4F8B\u5B50\u53EF\u80FD\u4F1A\u89C9\u5F97\u5B9E\u7528\u6027\u4E0D\u5927\uFF0C\u90A3\u4E48\u5C06\u6570\u7EC4\u7C7B\u578B\u6241\u5E73\u5316\u603B\u5E94\u8BE5\u7B97\u6709\u70B9\u5B9E\u7528\u6027\u5427</p><ol start="2"><li>\u5C06<code>[ number, [string], [ boolean, [ void, string ] ] ]</code> \u8F6C\u6362\u6210 <code>number | string | boolean | void</code> \u6241\u5E73\u5316\u8054\u5408</li></ol><p>\u8FD9\u79CD\u4F8B\u5B50\u5F88\u5BB9\u6613\u5C31\u4F1A\u60F3\u5230<code>\u9012\u5F52\u51FD\u6570</code></p><p>\u89E3\u51B3\u65B9\u6848\uFF1A\u9996\u5148\u4F7F\u7528<code>infer X[]</code>\u5C06\u5F53\u524D\u6570\u7EC4\u4E2D\u7684\u5143\u7D20\u8FDB\u884C\u5224\u65AD\uFF0C\u5982\u679C\u4E0D\u662F\u6570\u7EC4\u5219\u76F4\u63A5\u8FD4\u56DE\uFF0C\u5426\u5219\u5143\u7D20\u91CD\u65B0\u8FDB\u5165<code>SetOptional</code>\u5224\u65AD\u5FAA\u73AF\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">ArrType</span> <span class="token operator">=</span> <span class="token punctuation">[</span> <span class="token builtin">number</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span> <span class="token builtin">boolean</span><span class="token punctuation">,</span> <span class="token punctuation">[</span> <span class="token keyword">void</span><span class="token punctuation">,</span> <span class="token builtin">string</span> <span class="token punctuation">]</span> <span class="token punctuation">]</span> <span class="token punctuation">]</span>

<span class="token keyword">type</span> <span class="token class-name">SetOptional<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token punctuation">(</span><span class="token keyword">infer</span> <span class="token constant">X</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">?</span> SetOptional<span class="token operator">&lt;</span><span class="token constant">X</span><span class="token operator">&gt;</span> <span class="token operator">:</span> <span class="token constant">T</span>
<span class="token comment">// string | number | boolean | void</span>
<span class="token keyword">type</span> <span class="token class-name">Res</span> <span class="token operator">=</span> SetOptional<span class="token operator">&lt;</span>ArrType<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr>`,106),o=[p];function c(l,r){return s(),a("div",null,o)}var u=n(t,[["render",c],["__file","\u4ECE0\u5F00\u59CB\u7684TypeScript\u306E\u5341\u4E09\uFF1A infer\u3001extends\u3001keyof\u3001typeof\u3001in.html.vue"]]);export{u as default};
